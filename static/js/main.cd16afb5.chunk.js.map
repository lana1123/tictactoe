{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","gettingWinnerSquares","z","winnerSquares","firstSquare","secondSquare","thirdSquare","boardRendering","board","i","children","j","push","renderSquare","this","squares","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","ascending","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","style","fontWeight","jumpTo","handleClick","handleToggleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd16afb5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <div className=\"squareButton\">\r\n      <button onClick={props.onClick}>{props.value}</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n        winnerSquares={this.props.winnerSquares}\r\n      />\r\n    );\r\n  }\r\n\r\n  gettingWinnerSquares = (z) => {\r\n    const winnerSquares = this.props.winnerSquares;\r\n\r\n    const firstSquare = winnerSquares[0];\r\n    const secondSquare = winnerSquares[1];\r\n    const thirdSquare = winnerSquares[2];\r\n\r\n    return z == firstSquare || z == secondSquare || z == thirdSquare\r\n      ? \"squareWin\"\r\n      : \"square\";\r\n  };\r\n\r\n  boardRendering = () => {\r\n    const winnerSquares = this.props.winnerSquares;\r\n    let board = [];\r\n    var z = 0;\r\n    // Outer loop to create parent\r\n    for (let i = 0; i < 3; i++) {\r\n      let children = [];\r\n      //Inner loop to create children\r\n      for (let j = 0; j < 3; j++) {\r\n        children.push(\r\n          <div\r\n            className={\r\n              winnerSquares === null ? \"square\" : this.gettingWinnerSquares(z)\r\n            }\r\n          >\r\n            {this.renderSquare(z++)}\r\n          </div>\r\n        );\r\n      }\r\n      //Create the parent and add the children\r\n      board.push(<div className=\"board-row\">{children}</div>);\r\n    }\r\n    return board;\r\n  };\r\n\r\n  render() {\r\n    return <div>{this.boardRendering()}</div>;\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{ squares: Array(9).fill(null) }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      ascending: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n\r\n    this.setState({\r\n      history: history.concat([{ squares: squares }]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  handleToggleClick() {\r\n    this.setState({\r\n      ascending: !this.state.ascending,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? \"Go to move #\" + move : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button\r\n            style={\r\n              this.state.stepNumber == move\r\n                ? { fontWeight: \"bold\" }\r\n                : { fontWeight: \"normal\" }\r\n            }\r\n            onClick={() => this.jumpTo(move)}\r\n          >\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner[0];\r\n    } else if (this.state.stepNumber == 9) {\r\n      status = \"Draw\";\r\n    } else {\r\n      status = \"Next player:\" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            winnerSquares={winner ? winner[1] : null}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div className=\"status\">{status}</div>\r\n          <div>\r\n            <button onClick={() => this.handleToggleClick()}>\r\n              Toggle moves description\r\n            </button>\r\n          </div>\r\n          <ol className={this.state.ascending ? \"ascending\" : \"descending\"}>\r\n            {moves}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return [squares[a], [[a], [b], [c]]];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"],"sourceRoot":""}